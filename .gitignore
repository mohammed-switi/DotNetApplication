# Ignore Visual Studio temporary files, build results, and files generated by popular Visual Studio add-ons.

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific folders
.vscode/
.vs/



#.NET Properties
HealthCare/appsettings.Development.json
HealthCare/appsettings.json
# Mono Auto Generated Files
mono_crash.*

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Build results
[Dd]ebug/
[Rr]elease/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/

# Autogenerated files (test results)
TestResults/
nunit-*.xml
*.trx
*.testlog

# Build Directories (you can keep bin if you'd like to check-in those)
[Bb]in/
[Oo]bj/

# Common Extension Attributes
*.[Ll]og
*.bak
*.orig
*.patch

# TODO Comment Files
TODO.md

# .NET Core specific
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# File-based project references
*.sln.ide

# CodeRush
CR_*.*

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Node.js Tools for Visual Studio
node_modules/
npm-debug.log
yarn-error.log

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have source control, and it won't overwrite the old
# project file on disk, just in memory.
_UpgradeReport_Files/
Backup*/

# SQL Server files
*.mdf
*.ldf

# VS Code directories
.vscode/
.history/

# JetBrains Rider directories
.idea/
.idea_modules/

# Windows crash logs
*.dmp

# NuGet
*.nupkg
packages/
# Uncomment if necessary; generally it's better to re-download packages on build rather than commit them to source control
#*.snupkg

# End of .gitignore
